%! PS-Adobe-1.0
%%Creator: Daan van Berkel (daan.v.berkel.1980@gmail.com)
%%Advanced Problem Solving: Constraint Satisfaction Problems
%%Title: Sudoku
%%Pages: 6
%%EndComments

%%BeginProlog

/pagewidth 210 def
/pageheight 297 def

/initialize {
    75 25.1 div dup scale
    pagewidth 2 div pageheight 2 div translate
} def

/settings 0 dict def
settings begin
    /withthinline {1 2 div setlinewidth} def
    /withthickline {2 setlinewidth} def
end

/rectangle {
    [/height /width /y /x] dup length 0 add dict begin {exch def} forall
	x y moveto
	width 0 rlineto
	0 height rlineto
	width neg 0 rlineto
	closepath
    end
} def

/square {
    dup rectangle
} def

/grid {
    [/n /squarewidth /y /x] dup length 3 add dict begin {exch def} forall
	0 1 n 1 sub {
	    /j exch def
	    0 1 n 1 sub {
		/i exch def
		x i squarewidth mul add y j squarewidth mul add squarewidth square
	    } for
	} for
    end
} def

/board {
    [/n /width /y /x] dup length 2 add dict begin {exch def} forall
	/squarewidth width n div def
	x y squarewidth n grid
	settings begin
	    withthinline stroke
	end
	/bands n sqrt cvi def
	x y bands squarewidth mul bands grid
	settings begin
	    withthickline stroke
	end
    end
} def

/showsymbol {
    [/symbol /y /x] dup length 6 add dict begin {exch def} forall
	gsave
	    0 0 moveto
	    symbol true charpath
	    pathbbox
	    [/ury /urx /lly /llx] {exch def} forall
	grestore
	/dx symbol stringwidth pop 2 div neg def
	/dy ury lly sub 2 div neg def
	x dx add y dy add moveto
	symbol show
    end
} def

/symbolboard {
    [/symbols /boardwidth /y /x] dup length 4 add dict begin {exch def} forall
	/n symbols length def
	/squarewidth boardwidth n div def
	/x x squarewidth 2 div add def
	/y y boardwidth add squarewidth 2 div sub def

	/Monaco findfont 30 scalefont setfont
	/Monaco findfont squarewidth scalefont setfont
	
	0 1 n 1 sub {
	    /j exch def
	    0 1 n 1 sub {
		/i exch def
		x i squarewidth mul add y j squarewidth mul sub symbols j get i get showsymbol
	    } for
	} for
    end
} def

/configuration {
    [/boardwidth /symbols] dup length 6 add dict begin {exch def} forall

	/n symbols length def
	/x boardwidth 2 div neg def
	/y x def

	x y boardwidth n board
	x y boardwidth symbols symbolboard
    end
} def

%%EndProlog
%%Page: 4x4 1

save /cleanslate exch def

initialize

[
    [( ) ( ) (2) ( )]
    [( ) ( ) (1) (4)]
    [(2) (3) ( ) ( )]
    [( ) (4) ( ) ( )]
] pagewidth 2 3 div mul configuration

showpage

cleanslate restore

%%PageTrailer
%%Page: 4x4 2

save /cleanslate exch def

initialize

[
    [( ) ( ) ( ) ( )]
    [( ) (3) ( ) (4)]
    [(4) ( ) (1) ( )]
    [( ) ( ) ( ) ( )]
] pagewidth 2 3 div mul configuration

showpage

cleanslate restore

%%PageTrailer
%%Page: 4x4 3

save /cleanslate exch def

initialize

[
    [( ) ( ) ( ) (4)]
    [(3) ( ) ( ) ( )]
    [( ) ( ) ( ) (2)]
    [(1) ( ) ( ) ( )]
] pagewidth 2 3 div mul configuration

showpage

cleanslate restore

%%PageTrailer
%%Page: 9x9 4

save /cleanslate exch def

initialize

[
    [(1) ( ) ( ) ( ) (2) ( ) ( ) ( ) (4)]
    [( ) (3) ( ) (4) ( ) (8) ( ) (6) ( )]
    [( ) ( ) (4) ( ) ( ) ( ) (1) ( ) ( )]
    [( ) (1) ( ) ( ) (7) (5) ( ) (3) ( )]
    [(8) ( ) ( ) (2) ( ) (1) ( ) ( ) (6)]
    [( ) (9) ( ) (8) (3) ( ) ( ) (2) ( )]
    [( ) ( ) (2) ( ) ( ) ( ) (3) ( ) ( )]
    [( ) (7) ( ) (1) ( ) (2) ( ) (4) ( )]
    [(9) ( ) ( ) ( ) (8) ( ) ( ) ( ) (2)]
] pagewidth 2 3 div mul configuration

showpage

cleanslate restore

%%PageTrailer
%%Page: 9x9 5

save /cleanslate exch def

initialize

[
    [(7) ( ) ( ) (5) ( ) ( ) (9) ( ) ( )]
    [( ) (8) ( ) ( ) ( ) ( ) (2) (1) ( )]
    [( ) (4) ( ) ( ) ( ) ( ) ( ) (6) (7)]
    [( ) ( ) (3) (6) (8) ( ) ( ) ( ) ( )]
    [( ) (9) ( ) (2) ( ) (1) ( ) (8) ( )]
    [( ) ( ) ( ) ( ) (5) (7) (6) ( ) ( )]
    [(3) (6) ( ) ( ) ( ) ( ) ( ) (5) ( )]
    [( ) (2) (4) ( ) ( ) ( ) ( ) (7) ( )]
    [( ) ( ) (8) ( ) ( ) (3) ( ) ( ) (1)]
] pagewidth 2 3 div mul configuration

showpage

cleanslate restore

%%PageTrailer
%%Page: 16x16 6

save /cleanslate exch def

initialize

[
    [( ) (1) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) (6) ( ) ( ) (D) ( ) ( )]
    [( ) (2) ( ) ( ) ( ) ( ) (B) (9) ( ) (D) (5) (3) ( ) ( ) (4) (0)]
    [(C) ( ) (D) ( ) (1) ( ) (4) ( ) ( ) ( ) (2) ( ) (B) ( ) (E) (7)]
    [( ) (B) ( ) ( ) ( ) (c) ( ) (3) ( ) (4) (8) (1) ( ) ( ) ( ) (9)]
    [(5) ( ) ( ) (A) ( ) (3) (6) ( ) (8) (2) (9) ( ) ( ) ( ) (B) (D)]
    [( ) ( ) ( ) (3) (9) ( ) ( ) ( ) ( ) (D) ( ) ( ) (2) ( ) (6) (0)]
    [(7) (F) ( ) (6) (0) ( ) (2) ( ) ( ) ( ) (B) (A) ( ) ( ) ( ) ( )]
    [( ) ( ) (1) ( ) ( ) ( ) (5) ( ) ( ) ( ) ( ) ( ) ( ) (E) ( ) ( )]
    [( ) ( ) (C) ( ) ( ) ( ) ( ) ( ) ( ) (4) ( ) ( ) ( ) (B) ( ) ( )]
    [( ) ( ) ( ) ( ) ( ) (2) (7) ( ) ( ) (5) ( ) (E) (C) ( ) (1) (3)]
    [(3) (8) ( ) (0) ( ) ( ) ( ) (B) ( ) ( ) ( ) (7) (9) ( ) ( ) ( )]
    [(2) (A) ( ) ( ) ( ) (0) (C) (5) ( ) (9) (3) ( ) (8) ( ) ( ) (E)]
    [(0) ( ) ( ) ( ) ( ) (1) (A) (2) (9) ( ) (8) ( ) ( ) ( ) (C) ( )]
    [(F) (4) ( ) (1) ( ) (D) ( ) ( ) ( ) (C) ( ) (0) ( ) (8) ( ) (B)]
    [(6) (7) ( ) ( ) (C) (5) (0) ( ) (B) (A) ( ) ( ) ( ) ( ) (F) ( )]
    [( ) ( ) (B) ( ) ( ) (4) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) (5) ( )]
] pagewidth 2 3 div mul configuration

showpage

cleanslate restore

%%PageTrailer
%%Trailer
%%EOF
